<<module lolmax>>
takes input[numbers:array[1..100] of integer];
start
    declare sum: integer;
    for (index in 1..10)
    start
        sum := sum + 2 * (numbers[0] + 1);
    end
    print(sum);
end

<<module arraysum>>
takes input[list:array[40..200] of real];
returns [sum:real];
start
	declare s: real;
	s := 0.0;
	declare index : integer;
	for (index in 4..20)
	start
		index := s + list[index];
	end

    while (index > 0)
    start
        index := index - 1;
    end

	sum := s;
end

<<<driver program>>>
start
	declare num, k, sample:integer;
	declare A:array [4..10] of integer;
    declare cond:boolean;
    declare temp:integer;
	for( k in 6..10)
	start
		A[k]:=(num - k)*(num-k);
        while (((num - k) >= A[0] AND false) + 3 >= 0)
        start
            declare op:integer;
            num := num - 1;
            op := num;
            print(op);
        end
		print(A[k]);
        cond := (k < k + 1);
        print(cond);
        temp := k + 10 + num;
	end
	[num]:=use module arraysum with parameters A;
	print(num);
	
end
